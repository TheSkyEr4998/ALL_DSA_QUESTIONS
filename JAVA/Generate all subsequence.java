/*
Description

A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.

You are given a string S. You have to generate all the subsequences of the string S using a recursive approach (duplicates allowed)


Input
Input Format :

First line of the input contains length of the string S

Second line of the test case contains the string S

Constraints :

n <= 18




Output
Output all the substring in a particular order. To understand the order of printing, see the sample test case explanation


Sample Input 1 

4
abcd
Sample Output 1

a
ab
abc
abcd
abd
ac
acd
ad
b
bc
bcd
bd
c
cd
d
Hint

Output Explanation :

First output all the subsequences starting with first character. When all such subsequences got printed, then move to print all such starting with second chars, and so on.
*/
import java.io.*;
import java.lang.*;
import java.util.*;
class Main{
    public static String toString(List<Character>list){
        StringBuffer str = new StringBuffer();
        for (Character i : list) str.append(i);
        return str.toString();
    }
    public static void ans(char[] arr,List<Character> list,int cur){
        if (list.size() != 0){
            String str = toString(list);
            System.out.println(str);
        }
        if ( cur == arr.length) return;
        for ( int i = cur; i < arr.length; i++){
            list.add(arr[i]);
            ans(arr, list,i+1);
            list.remove(list.size()-1);
        }
    }
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        char [] arr = sc.next().toCharArray();
        List <Character> list = new ArrayList<>();
        ans(arr,list,0);
    }
}
  
